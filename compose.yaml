services:
  postgres-auth:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=awsome_marketplace.public'
      - 'POSTGRES_PASSWORD=Jannyda1'
      - 'POSTGRES_USER=redjanvier_admin'
      - 'PGDATA=/data/postgres'
    volumes:
      - ./postgres/auth:/data/postgres
    restart: always

  postgres-main:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=awsome_marketplace'
      - 'POSTGRES_PASSWORD=Jannyda1'
      - 'POSTGRES_USER=redjanvier'
      - 'PGDATA=/data/postgres'
    volumes:
      - ./postgres/main:/data/postgres
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Gateway-Service Docker Compose Config
  gateway:
    build:
      context: ./gateway
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - notification-service
      - product-service
      - order-service
      - broker

  ## Auth-Service Docker Compose Config
  auth-service:
    build:
      context: ./auth
      dockerfile: ./Dockerfile
    env_file: ./auth/.env
    depends_on:
      - notification-service
      - postgres-auth
      - broker

  ## Notifications-Service Docker Compose Config
  notification-service:
    build:
      context: ./notification
      dockerfile: ./Dockerfile
    env_file: ./notification/.env
    restart: always
    depends_on:
      - broker

  ## Products-Service Docker Compose Config
  product-service:
    build: 
      context: ./product
      dockerfile: ./Dockerfile
    depends_on:
      - auth-service
      - postgres-main
      - broker

  ## Orders-Service Docker Compose Config
  order-service:
    build: 
      context: ./product
      dockerfile: ./Dockerfile
    depends_on:
      - auth-service
      - notification-service
      - postgres-main
      - broker